package io.nh.kzg;

import java.math.BigInteger;

import io.nh.U;

public class BLS381BIRootUnity {
	/**
	 * 
	 * @param inA
	 */
	public static void main(String []inA)
	{
		_ru4();

		_t85_();
		
		_tk4_();
		
		_tk8_();
		
		// check if MODULO is BLSS12381 curve order
		U.pf("bls curve order [%s]\n",  BIGUtil.BI_CURVE_ORDER);
		U.pf("MODULO [%s]\n",  MODULO.toString());
		
	}

	private static void _ru4()
	{
		BigInteger []domain = BLS381BIRootUnity.computeRootOfUnity(4);

		BigInteger gen = UNITY_ROOTS[2];

		for (int i = 0; i < (4 + 1); i++) {

			BigInteger exp = new BigInteger(Integer.toString(i));
			BigInteger tmp = gen.modPow(exp, MODULO);

			U.pf("g^%d [%s]\n", i, tmp.toString());
		}

	}
	/**
	 * 
	 */
	private static void _t85_()
	{
		int k = 1 << 3;
		String generator = "85";
		String mod = "337";
		
		computeRootOfUnity(k, generator, mod);
	}
	/**
	 * 
	 */
	private static void _tk4_()
	{
		int k = 1 << 4;
		String generator = "14788168760825820622209131888203028446852016562542525606630160374691593895118";
		String mod = MODULO.toString();
		
		computeRootOfUnity(k, generator, mod);
	}
	/**
	 * 
	 */
	private static void _tk8_()
	{
		int k = 256;
		String generator = "36007022166693598376559747923784822035233416720563672082740011604939309541707";
		String mod = MODULO.toString();
		
		computeRootOfUnity(k, generator, mod);
	}
	/**
	 * 
	 * @param inK
	 * @param inR
	 * @param inMod
	 */
	public static BigInteger[] computeRootOfUnity(int inNeeded)
	{
		int k = (int)(Math.log(inNeeded) / Math.log(2.0));
		BigInteger generator = UNITY_ROOTS[k];
		return computeRootOfUnity(inNeeded, generator.toString(), MODULO.toString());
	}
	/**
	 * 
	 * @param inK
	 * @param inR
	 * @param inMod
	 */
	public static BigInteger[] computeRootOfUnity(int inK, String inG, String inMod)
	{
		BigInteger m = new BigInteger(inMod);
		BigInteger g = new BigInteger(inG);
		
		//U.pf("K m [%d] ============= \n", inK);
		//U.pf("big m [%s]\n", m.toString());
		//U.pf("big g [%s]\n", g.toString());
		
		BigInteger []rval = new BigInteger[inK];
		
		for (int i = 0; i <= inK; i++) {
			BigInteger exponent = new BigInteger(Integer.toString(i));
			BigInteger tmp = g.modPow(exponent, m);
			
			if (i < inK) {
				rval[i] = tmp;
			}
			//U.pf("root[%d] r [%s]\n", i, tmp);
		}
		//U.pf("\n");
		return  rval;
	}
	/**
	 * 
	 * @param s
	 * @return
	 */
	static private BigInteger _tobi_(String s)
	{
		return new BigInteger(s);
	}
	public static final BigInteger MODULO = new BigInteger("52435875175126190479447740508185965837690552500527637822603658699938581184513");
	static final BigInteger []UNITY_ROOTS = {
		/* k=0          r=1          */ _tobi_("1"),
		/* k=1          r=2          */ _tobi_("52435875175126190479447740508185965837690552500527637822603658699938581184512"),
		/* k=2          r=4          */ _tobi_("3465144826073652318776269530687742778270252468765361963008"),
		/* k=3          r=8          */ _tobi_("23674694431658770659612952115660802947967373701506253797663184111817857449850"),
		/* k=4          r=16         */ _tobi_("14788168760825820622209131888203028446852016562542525606630160374691593895118"),
		/* k=5          r=32         */ _tobi_("36581797046584068049060372878520385032448812009597153775348195406694427778894"),
		/* k=6          r=64         */ _tobi_("31519469946562159605140591558550197856588417350474800936898404023113662197331"),
		/* k=7          r=128        */ _tobi_("47309214877430199588914062438791732591241783999377560080318349803002842391998"),
		/* k=8          r=256        */ _tobi_("36007022166693598376559747923784822035233416720563672082740011604939309541707"),
		/* k=9          r=512        */ _tobi_("4214636447306890335450803789410475782380792963881561516561680164772024173390"),
		/* k=10         r=1024       */ _tobi_("22781213702924172180523978385542388841346373992886390990881355510284839737428"),
		/* k=11         r=2048       */ _tobi_("49307615728544765012166121802278658070711169839041683575071795236746050763237"),
		/* k=12         r=4096       */ _tobi_("39033254847818212395286706435128746857159659164139250548781411570340225835782"),
		/* k=13         r=8192       */ _tobi_("32731401973776920074999878620293785439674386180695720638377027142500196583783"),
		/* k=14         r=16384      */ _tobi_("39072540533732477250409069030641316533649120504872707460480262653418090977761"),
		/* k=15         r=32768      */ _tobi_("22872204467218851938836547481240843888453165451755431061227190987689039608686"),
		/* k=16         r=65536      */ _tobi_("15076889834420168339092859836519192632846122361203618639585008852351569017005"),
		/* k=17         r=131072     */ _tobi_("15495926509001846844474268026226183818445427694968626800913907911890390421264"),
		/* k=18         r=262144     */ _tobi_("20439484849038267462774237595151440867617792718791690563928621375157525968123"),
		/* k=19         r=524288     */ _tobi_("37115000097562964541269718788523040559386243094666416358585267518228781043101"),
		/* k=20         r=1048576    */ _tobi_("1755840822790712607783180844474754741366353396308200820563736496551326485835"),
		/* k=21         r=2097152    */ _tobi_("32468834368094611004052562760214251466632493208153926274007662173556188291130"),
		/* k=22         r=4194304    */ _tobi_("4859563557044021881916617240989566298388494151979623102977292742331120628579"),
		/* k=23         r=8388608    */ _tobi_("52167942466760591552294394977846462646742207006759917080697723404762651336366"),
		/* k=24         r=16777216   */ _tobi_("18596002123094854211120822350746157678791770803088570110573239418060655130524"),
		/* k=25         r=33554432   */ _tobi_("734830308204920577628633053915970695663549910788964686411700880930222744862"),
		/* k=26         r=67108864   */ _tobi_("4541622677469846713471916119560591929733417256448031920623614406126544048514"),
		/* k=27         r=134217728  */ _tobi_("15932505959375582308231798849995567447410469395474322018100309999481287547373"),
		/* k=28         r=268435456  */ _tobi_("37480612446576615530266821837655054090426372233228960378061628060638903214217"),
		/* k=29         r=536870912  */ _tobi_("5660829372603820951332104046316074966592589311213397907344198301300676239643"),
		/* k=30         r=1073741824 */ _tobi_("20094891866007995289136270587723853997043774683345353712639419774914899074390"),
		/* k=31         r=2147483648 */ _tobi_("34070893824967080313820779135880760772780807222436853681508667398599787661631"),
	};
	
}
